{"version":3,"sources":["reducers/logoChange.jsx","reducers/index.js","store.js","actions/newLogo.jsx","actions/types.js","components/DropZone/dropzone.jsx","components/Header/header.jsx","components/Sidebar/sidebar.jsx","components/Logo/logo.jsx","components/Preview/preview.jsx","App.js","serviceWorker.js","index.js"],"names":["initialState","id","url","combineReducers","newLogo","state","arguments","length","undefined","action","type","Object","objectSpread","payload","middleware","thunk","store","createStore","rootReducer","applyMiddleware","apply","DropZone","imgfile","_this2","this","file","reader","FileReader","readAsDataURL","onload","e","setState","result","props","_this3","react_default","a","createElement","className","onChange","event","target","files","onClick","Component","connect","dispatch","bindActionCreators","Header","SideBar","href","Logo","src","alt","Preview","key","preview","logoPreview","App","es","Logo_logo","Header_header","Sidebar_sidebar","DropZone_dropzone","components_Preview_preview","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3f0f1778.chunk.js","sourcesContent":["const initialState = {\r\n    id: 0,\r\n    url: []\r\n}\r\n\r\nexport default function (state = initialState, action){\r\n    switch(action.type){\r\n        case \"NEW_LOGO\":\r\n            // console.log(action.payload)\r\n            return {\r\n                ...state,\r\n                url: action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport logoChange from './logoChange';\r\n\r\n\r\nexport default combineReducers({\r\n    newLogo: logoChange,\r\n})","import {\r\n    createStore,\r\n    applyMiddleware\r\n} from 'redux';\r\n\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer, initialState, applyMiddleware(...middleware));\r\n\r\nexport default store;","import { NEW_LOGO } from './types';\r\n\r\nexport const newLogo = (url) =>{\r\n    // console.log(\"gottem\")\r\n    return{\r\n        type: NEW_LOGO,\r\n        payload: url\r\n    }\r\n}","export const NEW_LOGO = 'NEW_LOGO';","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport {newLogo} from '../../actions/newLogo';\r\n\r\nimport './dropzone.css'\r\n\r\nclass DropZone extends Component {\r\n    //setting inital state for this component\r\n    state={\r\n        imgfile:[],\r\n        url:[]\r\n    }\r\n\r\n    //creating the new logo\r\n    newLogo(){\r\n        var file = this.state.imgfile;\r\n        var reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = (e) => {\r\n            return (\r\n                this.setState({\r\n                    //image src in base64 string\r\n                    url: reader.result\r\n                })\r\n            )\r\n        };\r\n        // sending the current state (after the image has been uploaded) to the action\r\n        this.props.newLogo(this.state.url)\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div className=\"dropzoner\">\r\n                <h2>Upload New Logo</h2>\r\n\r\n                <input \r\n                    type=\"file\" \r\n                    onChange={event=> this.setState({imgfile: event.target.files[0]})} />\r\n\r\n                <button onClick={() => this.newLogo()}>Upload</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//bringing in action\r\nfunction matchDispatchToProps(dispatch){\r\n    return bindActionCreators({newLogo},dispatch);\r\n}\r\n\r\n\r\nexport default connect(null, matchDispatchToProps)(DropZone);","import React, { Component } from 'react';\r\nimport './header.css';\r\n\r\n\r\nclass Header extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"head\">\r\n                    <h1>Clearview Social Inc</h1>\r\n                    <h2>Branding & Customization</h2>\r\n\r\n\r\n                </div>\r\n\r\n                <hr />\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport './sidebar.css';\r\n\r\nclass SideBar extends Component {\r\n    render() {\r\n        return (\r\n            <nav>\r\n                <ul>\r\n                    \r\n                    <li><a href=\"/\"><i className=\"far fa-newspaper\"></i>Content</a></li>\r\n                    <li><a href=\"/\"><i className=\"far fa-calendar-check\"></i>Calendar</a></li>\r\n                    <li><a href=\"/\"><i className=\"fas fa-poll\"></i>Results</a></li>\r\n                    <li><a href=\"/\"><i className=\"far fa-question-circle\"></i>Help</a></li>\r\n                    <hr />\r\n                    <li><a href=\"/\" className=\"extrapadding\">Admin</a></li>\r\n                    <li><a href=\"/\" className=\"extrapadding\">Queues</a></li>\r\n                    <li><a href=\"/\"><i className=\"far fa-thumbs-up\"></i>Engagement</a></li>\r\n                    <li><a href=\"/\"><i className=\"fas fa-cog\"></i>Settings</a></li>\r\n                    <li><a href=\"/\" className=\"extrapadding\">Users</a></li>\r\n                </ul>\r\n            </nav>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default SideBar;","import React, { Component } from 'react'\r\nimport './logo.css';\r\n\r\n\r\n\r\n\r\n class Logo extends Component {\r\n   \r\n  render() {\r\n    return (\r\n      <img\r\n        className=\"logotag\"\r\n        src={'https://s3.amazonaws.com/images.clearviewsocial/CVSLogo.FullColor.RGB+(2).png'}\r\n        alt=\"issue\" />\r\n     \r\n    )\r\n  }\r\n}\r\n\r\nexport default (Logo);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport './preview.css';\r\n// import PropTypes from 'prop-types';\r\n\r\n\r\n\r\nclass Preview extends Component {\r\n    logoPreview() {\r\n        return (\r\n            <img\r\n                key={this.props.newLogo.id}\r\n                src={this.props.newLogo.url}\r\n                alt=\"\" />\r\n        )\r\n    }\r\n\r\n    render() {\r\n\r\n        const preview = this.logoPreview();\r\n\r\n        return (\r\n            <div className=\"preview\"> \r\n                \r\n                <div className=\"previewDark\">\r\n                    <h3>Preview on a Dark Backgound</h3>\r\n                    {preview}\r\n                </div>\r\n                \r\n                <div className=\"previewLight\">\r\n                    <h3>Preview on a Light Backgound</h3>\r\n                    {preview}\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        newLogo: state.newLogo\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Preview);","import React from 'react';\nimport './App.css';\n\nimport {Provider} from 'react-redux';\nimport store from './store'\n\nimport DropZone from './components/DropZone/dropzone';\nimport Header from './components/Header/header';\nimport SideBar from './components/Sidebar/sidebar';\nimport Logo from './components/Logo/logo';\nimport Preview from './components/Preview/preview';\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      < div className = \"App\" >\n        <Logo className=\"logo\"/>\n        <Header className = \"header\" />\n        <SideBar className=\"nav\" />\n        <DropZone className=\"main\"/>\n        <Preview className = \"main\" />\n\n      </div>\n\n    </Provider>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}